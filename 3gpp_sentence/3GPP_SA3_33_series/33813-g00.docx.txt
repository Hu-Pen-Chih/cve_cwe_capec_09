- Study the possible security aspects of the Network Slicing interworking with EPC for Connected and Idle mes.
For the purposes of the present document, the terms given in TR 21.905and the following apply.
VoidThis clause details the key issues identified for security aspects related to the enhanced Network Slices.
Each key issue defines the background to the issue, defines the threats related to the issue and proposes requirements that resolve the key issue.
The use cases include, but are not limited to, UEs being restricted to one of two modes of operations.
For example, a Public Safety UE being either in an off-duty or an on-duty mode but not simultaneously in both modes.
It gives some use cases including: Slice authentication by 3rd party.
For example, a particular NSSAI It has been concluded in Rel-15 that S-NSSAI is not transmitted in initial NAS messages, until security context is established.
These tentative decisions leave following open issues needed to be addressed.
IntroductionThis solution is based on the agreed Solution #3.2 in the SA2 TR 23.740.
A AAA proxy function (AAA-F) is also defined to provide a single point of interaction from the PLMN with the third parties.
Slice specific User IDs and credentials, separate from those used for the primary authentication, are used in the Slice specific authentication.
Step 5: AMF sends EAP Identity Request to the UE corresponding to the NSSAI of the network slice, to initiate slice specific authentication.
Step 7: AMF sends Authentication Request to the AAA server of the network slice to authenticate the UE.
The message will contain the EAP Identity received from the UE.Step 9: AAA sends EAP success for the EAP user identity, if the verification succeeds.
This solution addresses key issue#1 Authentication for access to specific Network Slices.
Slice specific authentication is enabled based on the UEs subscription information received from the AUSF/UDM upon successful primary authentication.
Slice specific authentication is initiated only if the UE also indicated its capability for the procedure in the UE capability indication.
Since the AMF is initiating the EAP procedure for the slice specific authentication one by one, there are no timing issues associated with the procedure.
Hence this solution provides protection of User ID for the slice authentication between UE and serving network.
This solution addresses the Key Issue #1 Authentication for access to specific Network Slices.
The slice authentication is performed after Primary Authentication and based on the EAP framework, where SEAF/AMF takes the role of the Authenticator.
Steps 2 indicates the same Primary Authentication procedure as in, where the UE and the PLMN are mutual authenticated.
The user subscription ID for slice authentication can be included in the N2 messages exchanged with the AMF.
In case the UE has valid security context, the primary authentication is skipped.
Step 3: AMF obtains the subscription information of the user from UDM, which provides necessary information to AMF whether slice authentication is required.
Step 4: Registration accept is sent to UE, including allowed NSSAI as in, after Primary Authentication is successful.
The S-NSSAI in the Requested NSSAI that require slice authentication, e.g. authenticated previously, can also be included.
Step 5: UE sends Registration Complete corresponding to the allowed S-NSSAI in step 4.
The slice authentication is based on the EAP framework, where AMF/SEAF takes the role of Authenticator.
Various EAP methods can be supported and UE can negotiate with AAA server on the EAP method based on IETF RFC .
The steps 6a and 6b and the number of messages exchanged in step 6d are dependent on the EAP method used.
Step 7: The UE Configuration Update is sent with allowed NSSAI after slice authentication is completed.
Note: the management services and procedure for network slice provisioning are specified in clauses 6 and 7 ofrespectively.
This solution is based on the normative solution for Slice-Specific Authentication and Authorization (SSAA) in.
The SSAA is performed between the UE and the AAA-S based on the EAP framework where the AMF/SEAF acts as the EAP authenticator.
The EAP authentication messaging for SSAA is performed after the Registration procedure.
The Allowed NSSAI returned in the Registration Accept message does not include the S-NSSAI.
The Rejected NSSAI in the Registration Accept message includes the S-NSSAI with a cause value indicating a pending SSAA for the S-NSSAI.
Step 2: UE and network perform a standard SSAA procedure over RAT#1.
The EAP based authentication run is performed over secure NAS transport messages.
AMF decides to skip a new Primary authentication over the RAT#2 access.
Then the AMF updates the UE configuration to remove the S-NSSAI from the Allowed NSSAI for the access used to register for that S-NSSAI.
In the meantime, the network The use cases have been described in TR 22.904, which motivates the current study.
Steps 1-3: AMF starts EAP based slice authentication procedure after Primary Authentication.
The ID will be concealed depending on the EAP method used.
In this solution, UE and RAN are offered a temporary NSSAIs (T-S-NSSAIs) instead of cleartext S-NSSAIs in registration procedure.
After that, the T-S-NSSAIs will be used in the AS layer.
In the registration/service accept message, {allowed S-NSSAIs, T-S-NSSAIs} tuple will be sent to UE instead of cleartext S-NSSAIs.
In case T-S-NSSAI is not available, the UE will be routed to an AMF the same way as that S-NSSAI is not present.
As to congestion control, only the serving gNB is storing T-S-NSSAIs.
Besides, the solution introduces no extra message exchanges to the existing procedures, and there is no extra computation in UE.
The solution addresses the key issue by introducing slice specific information for the expected NF producer in token requests, token claims and token verification.
This solution addresses the Key Issue #6 Confidentiality protection of NSSAI and home control.
Each AMF in a serving network needs to be provisioned with the current Key ID and associated information.
Hence, an instead of the S-NSSAI, an S-NSSAI identifier, which can be mapped to the corresponding S-NSSAI, is used to construct 'encrypted S-NSSAI''.
A mapping between S-NSSAI identifiers and S-NSSAI is configured by AMF to NG-RAN nodes.
This is done by using the Key ID in the 'encrypted S-NSSAI' to know the key and encryption method.
This allow the S-NSSAI identifier to be decrypted and the mapping to the actual S-NSSAI requested by the UE to be resolved.
The solution works with Rel-15 UEs as the UE does not need to process the 'encrypted S-NSSAI'.
The solution protects against UEs who The solution does not require every S-NSSAI to be protected if so desired by the operator.
This solution addresses Key Issue #6: Confidentiality protection of NSSAI and home control.
The addition of hashing of temporary identifiers allows to minimize the overhead and reduce the complexity of pseudonym changes.1.
The NG-RAN sends to the AMF in a NG_SETUP_REQUEST a list of supported S-NSSAI per TA (as per) and, additionally, T-S-NSSAI.4.
The UE computes the hash values of its requested T-S-NSSAIs using its S-TMSI and RAND.
The UE transmits the T-S-NSSAIs hash values (instead of cleartext T-S-NSSAIs) in the AS layer in the RRCConnectionSetupComplete message.
The UE hashed T-S-NSSAI) to assist the NG-RAN in distinguishing the UEs capable of NSSAI privacy protection according to Rel-15.
By using its S-TMSI and a RAND in computations of T-S-NSSAI hashes, UEs requesting the same T-S-NSSAI will transmit different T-S-NSSAI hash values.
The Solution #11 addresses Key Issue #6: Confidentiality protection of NSSAI and home control.
UE are offered a temporary NSSAIs (T-S-NSSAIs) instead of cleartext S-NSSAIs in registration procedure.
In the registration procedure, AMF identifies T-S-NSSAIs according to allowed S-NSSAIs based on the mapping of S-NSSAIs and T-S-NSSAIs.
AMF calculates a new T-S-NSSAI according to the allowed S-NSSAI based on the predefined policies.
Then AMF cancel the old T-S-NASSAI, and stores the {allowed S-NSSAI, new T-S-NSSAI} tuple.