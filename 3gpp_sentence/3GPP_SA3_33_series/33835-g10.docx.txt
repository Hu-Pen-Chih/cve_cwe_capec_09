Solution details 485.15.1 Introduction 495.15.2.3 AKMA key refresh 525.16.2 Solution details 545.16.2.2 AKMA Established Key Use Procedure 565.17.1 Introduction 585.17.2.2.
GBA allows mutual authentication and the establishment of shared keys between the UE and BSF over the Ub interface.
The AKMA AF interacts with an anchor function, the BSF-equivalent, in the 5G Core.
It will influence UE can only implement few protocols due to its memory and calculation limitation.
It raises the requirement for the communication between UE and mobile network.
So specific protocol can be designed more flexible to fit for various lower layer protocols.
The primary authentication meaning the one used to allow 5GS access to that UE.
This means that the operator is obliged to ensure that the SUPI is not revealed to any other parties.
ThreatsThe interfaces utilized by the AKMA architecture between the 5G system and theIn the sense that two separate AKMA AFs never utilize the same key.
The AAuF takes the role of a pass-through authenticator, andThe authentication procedure is initiated by the UE sending a Request message to the AAuF.
Following the UE request the AAuF triggers the EAP authentication procedure by sending an AKMA authentication request to the AUSF.
In case of success, the message includes as well the AKMA anchor key KAKMA.
The temporary identifier is used by the UE for subsequent Requests towards AApFs as long as the validity period has not elapsed.
When the UE is not registered to the 5G System, it is required that the UE has IP connectivity as in the GBA feature.
In such case the EAP messages are carried using the PANA protocol as described above.
The solution proposes a user plane authentication and key agreement procedure for the derivation of the AKMA anchor key KAKMA using an anchor function AAuF.
The AAuF interfaces directly the UE and the AUSF for the realization of the authentication procedure.
The AAuF interacts with the UE over the a1 reference point.
The AAuF interacts with the UDM/ARPF and the AApF using Service-Based Interfaces.
The procedure for negotiating the use of AKMA is given in Figure 5.3.2.2.1-1.
This is based on the GBA initiation procedure described in cl 4.5.1 of TS 33.220 .
The authentication procedure is initiated by the UE sending a Request message to the AAuF.
For PDU sessions of IP type, the EAP messages are carried over IP using the PANA protocol specified in RFC .
the UE has been successfully authenticated by the AAuF, the UE has the necessary keying material to establish secure communication with any AApF.
The AAuF interfaces directly the UE and UDM/ARPF for the realization of the authentication procedure.
In addition, during the authentication between UE and anchor function, a shared key Ks between UE and anchor function is derived.
The AUSF uses the first 256 bits of EMSK as the KAUSF and then calculates Anchor Function key KAKMA from KAUSF and Anchor Function identifier.
The AAuF interacts with the UE via the AKMA Protocol Transfer Gateway (APTG) over Service-Based interfaces.
- AKMA Application Function (AApF): interact with AAuF for AKMA application specific keys.
APTG performs a “syntax" translation between the UE originated protocol and HTTP/HTTPS.
Besides, this solution leverages AUSF to directly authenticate UEs without running a separate authentication procedure.
GBA , the bootstrapping (i.e. authentication to get a fresh master key Ks) requires only IP connectivity between the UE and BSF.
The AKMA authentication procedure is initiated by the UE sending an AKMA authentication request message to the AMF/SEAF over NAS.
The AMF/SEAF recognizes that the request is about AKMA authentication, determines the correct AAuF and sends an AKMA authentication request to the AAuF.
The AAuF verifies EAP response / AKA' challenge and, if successful, derives the AKMA anchor key KAKMA.
The AAuF sends an EAP success, temporary identifier pointing to KAKMA.
The AKMA authentication procedure is initiated by the UE sending an AKMA authentication request message to the AMF/SEAF over NAS.
The AMF/SEAF recognizes that the request is about AKMA authentication, determines the correct AAuF and sends an AKMA authentication request to the AAuF.
the UE has been successfully authenticated by the AAuF, the UE has the necessary keying material to establish secure communication with any AApF.
The AMF needs to process new NAS messages with the indication that the messages are to be used for AKMA authentication procedure.
The AMF needs to interface the potential new NF (AAuF) that plays a similar role as the AUSF in primary authentication.
The advantages of this solution are:- Minimal impact on the UE.
Let the application function handle the revocation by not providing any service to the UE when the application key is revoked.
For the revocation to be authenticated, option1 could use the old anchor key.
Option 2 might not work if the application function is not functioning properly due to crash or similar.
Option 3 relies on the UE itself being responsible for the revocation.
Since the UE bootstrapping client and anchor function perform mutual authentication, the bootstrapping client will know when the authentication fails.
The bootstrapping client can then revoke the application keys in the respective application.
The bootstrapping client needs to save a list of identities of derived keys and their respective application, to be able to perform the revocation.
This solution corresponds to the key hierarchy where the KAUSF and KAKMA are sibling keys.
This solution corresponds to the key hierarchy where the KAUSF and KAKMA are sibling keys.
Figure 5.15.2.3-1: AKMA key refresh This refresh procedure is applicable regardless of which options is used for the primary authentication (EAP-AKA´ or 5G AKA).
The AKMA key also needs to be refreshed in the UE.
This requires some synchronization between the UE and the AKAF or between UE and AUSF.
In Figure 5.15.2.3-2 an alternative where key refresh is signalled from AKAF to UE is shown.
With this solution there is no need for a separate and specific AKMA authentication.
AKAF- Support key refresh procedure using counter- UENo need for separate AKMA authentication.
In order to support the functionality of established key usage, an AKMA Key Repository Service (AKRS) is included in the AKMA Architecture.
In this version of the architecture, the AKRS connects to the SEAF.
Storing the KSEAFThe service can be collocated with the AMF/SEAF but can also be run standalone.
Storing the KAUSF or KSEAFNote 2: The KSEAF can be calculated from the KAUSF.
As such, there is no need to store both the KSEAF and the KAUSF.The figure 5.16.2.1.2-1 below illustrates the proposed architecture.
A KAKMA has been derived from KSEAF;This solution addresses key issue #10 by proposing a method for deriving an AKMA root key from KSEAF.
In the home network option, an authentication is performed between the UE and the home network based on KSEAF.
It assumes the existence of an AKMA Authentication Function (AAuF) connected to the SEAF and to the AUSF.
Moreover, the AAuF has connections to one or more AKMA Application Functions (AApF).
The UE has control plane connectivity to the AAuF via the SEAF and it has user plane connectivity to the AApF directly.
The solution enables both EAP-AKA' or 5G AKA to be used as primary authentication procedure.
Figure 5.17.2.1-1: AKMA reference architectureThe information flows describing the solution are depicted in Figure 5.17.2.2.1-1, Figure 5.17.2.2.1-2, Figure 5.17.2.2.1-3, and Figure 5.17.2.2.1-3.
The first diagram depicts the initiation of the primary authentication and key agreement procedure using the AKMA Authentication Function (AAuF) between SEAF and AUSF.
The second and third diagram depict the authentication procedures for EAP-AKA' and 5G-AKA, respectively, using the AAuF between SEAF and AUSF.
The fourth diagram depicts the calculation of the end-to-end encryption and integrity keys.
SEAF receives a message from the UE during a procedure establishing a signalling connection (over N1).
In addition, it also includes an AKMA Application Function ID (AApF ID).
The authentication procedure for EAP-AKA' with AKMA additions works as follows, cf.
The ME uses the most significant 256 bits of the EMSK as the KAUSF and then calculates KSEAF in the same way as the AUSF.
The authentication procedure for 5G AKA with AKMA additions works as follows, cf.
The UDM In case SUCI was included in the Nudm_UEAuthentication_Get Request, UDM will include the SUPI in the Nudm_UEAuthentication_Get Response.
At receipt of the RAND and AUTN, the USIM If so, the USIM computes a response RES.
If the RES* and XRES* are equal, the AUSF AUSF 14.
An AKMA Authentication Function (AAuF) is used between SEAF and AUSF.The AUSF 1.
The UE calculates the KAF from KAKMA depending on the AApF ID used in the authentication described before.
The UE associates the KAF with the Temp ID received during the authentication.3.
The AAuF sends the KAF and associated Temp ID to the appropriate AApF (corresponding to the AApF ID received during the authentication).5.
The AApF calculates the KE2Eint and KE2Eenc from the corresponding KAF and the pre-shared KEnterprise according to the key hierarchy described in clause 5.17.2.2.2.
These keys are associated with the Temp ID used in the authentication.
The key hierarchy explaining the dependency of the various keys is depicted in Figure 5.17.2.2.2-1.
The key separation for a UE between any AKMA application function is supported using a 16-bit AKMA Application Function Counter (AF Counter).
If the verification is successful, the UE generates the application key using the received AF Counter and the other AKMA parameters.
The AF counter specific to the UE is managed by both the UE and the AKMA authentication function.
The AKMA application key is derived as follows.where AApF ID is the AKMA Application Function Identifier.
Therefore, it is assumed that the UE had successfully registered to the 5G core before invoking AKMA services.
The KAUSF key identifier is stored by the AUSF along with the KAUSF.
This means that the AKMA key lifetime(s) cannot be shorter than the time interval between primary authentications.
This solution supports user privacy as SUPI is never sent by the UE to the network.
Whenever the UE starts an initiation procedure for AKMA, the UE will retrieve the A-KI corresponding to the latest KAUSF from memory.
Retrieve the KAUSF that corresponds to the ngKSI received or if not found, return an error message.
Potential AKMA use of established keys This solution's context is limited to only the problem of key synchronization if implicit bootstrapping is used.
If no implicit bootstrapping is used, this solution does not apply.
However, the problem of key synchronization applies to a wider set of services defined in.
Furthermore, this option impacts existing signalling between the SEAF and AUSF during primary authentication.
As such, this option is considered to have a large system impact.
In this solution, the term AKRS is used.1) The UE initiates an initiation procedure by contacting an AAuP according to clause 5.2.2.2.1.
In this case, the AAuF can choose between using a KAKMA based on KAUSF directly or based on KSEAF.
Whether the service is located in the country where the UE is roaming / serving network;4) Local configuration.
Whether the service is located in the country where the UE is roaming / serving network;4) Local configuration.
In the home network option, an authentication is performed between the UE and the home network based on KSEAF or KAUSF.
If the KSEAF is used, the serving network could pose as the AUSF because the serving network knows the KSEAF.
Also, this condition leads to a situation of loss of home network control over the authentication.
The temporary identifier is generated in the procedure of bootstrapping authentication of AKMA and used to bind the subscriber identity to the keying material.5.
The Anchor Function stores the key KAF and lifetime of KAF.7.
The UE derives the key KAF from the key KAKMA and the key derivation parameters according to step 3.
Figure 5.23.2.1-1 NEF as the AKMA Anchor FunctionThere is no separate authentication of the UE to support AKMA functionality.
The AKMA anchor key, KAKMA, is derived by the AUSF and the UE as part of the 5G primary authentication run.1.
The UE starts communication with the AApF with a session establishment request.
The UE derives AApF specific key from KAKMA before it begins communicating with the application function.
The AApF checks if it has the necessary pre-shared key for the requesting UE.
If not, it'll invoke the Key Request API to obtain AApF specific key from the NEF.
The AApF includes the key identifier, and its own Id in the API Request.
The NEF generates AApF specific key from KAKMA and responds back to AApF with the AApF key and its lifetime.
Since AKMA keys are based on KAUSF from primary authentication run, the AKMA keys can only be refreshed by running a fresh primary authentication.
This implies that the AKMA key lifetime(s) are higher than the time interval between primary authentication runs.
However, this means NEF has to handle key derivation, thus new functionalities of NEF have to be defined.
The solution reuses KAUSF, generated from primary authentication of the UE, to derive AKMA specific keys.
There is no separate authentication of the UE for AKMA key management services.
The AApF sends the AKMA push request to the AAuF, including the AApF ID, identity of the subscriber, e.g., GPSI.
Upon receiving the request from the AApF, the AAuF send the AKMA security context request to the UDM, including the GPSI.4.
If there is no AUSF address, the AAuF select an AUSF based on the local policy.
For Case A, the AUSF sends the Kaauf to the AAuF.
The detail of EAP-AKA' AV and 5G HE AV refers toclause 6.1.
AAuF generates the AKMA-PI similar as the GBA PI generation specified in.
The AAuF sends the AKMA-PI, and AApF key to the AApF.10.
network.5.25.1 IntroductionAs concluded in clause 7.1 of the present document, the KAKMA will be derived from KAUSF (implicit bootstrapping).
Since KAUSF does not have a lifetime, the KAKMA will not automatically inherit a lifetime.
To avoid the need for a refresh procedure for anchor keys, it is proposed that the implicit lifetime is used for KAKMA.
- Explicit lifetime: A lifetime is specified for the KAF based on some configuration parameter or operator policy.
The signalling above can be avoided if the application key continues to be used until its lifetime runs out.
This would contradict the requirement above but provide a smoother solution.
It is proposed that explicit lifetimes are used for application keys to avoid the extra signalling mentioned above for implicit lifetimes.
It is proposed that application keys can continue to be used until their lifetimes expire even when there is a new anchor key established.
When the application key lifetime expires, a new application key is established using the new anchor key.
If a new primary authentication is performed that does not result in a new anchor key, the application keys might need to be revoked.
To avoid extra signalling when an anchor key is replaced, application key can still be used until the explicit lifetime expires.
It is recommended to use the idea of solution #15, #19 and #23 of implicit bootstrapping as the basis of AKMA authentication procedure.
NOTE 2: Protection of AKMA interfaces is left for normative work, which depends on the specific AKMA architecture specified in the normative work.